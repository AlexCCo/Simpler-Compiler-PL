/* Generated By:JavaCC: Do not edit this line. EvaluadorConstants.java */
package descending;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface EvaluadorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int sign = 1;
  /** RegularExpression Id. */
  int digit = 2;
  /** RegularExpression Id. */
  int posDigit = 3;
  /** RegularExpression Id. */
  int chr = 4;
  /** RegularExpression Id. */
  int intOr0 = 5;
  /** RegularExpression Id. */
  int fl0at = 6;
  /** RegularExpression Id. */
  int exp = 7;
  /** RegularExpression Id. */
  int OPERATOR_ADD = 10;
  /** RegularExpression Id. */
  int OPERATOR_MINUS = 11;
  /** RegularExpression Id. */
  int OPERATOR_DIV = 12;
  /** RegularExpression Id. */
  int OPERATOR_MUL = 13;
  /** RegularExpression Id. */
  int OPERATOR_LESS_THAN = 14;
  /** RegularExpression Id. */
  int OPERATOR_LESS_EQUAL_THAN = 15;
  /** RegularExpression Id. */
  int OPERATOR_GREATER_THAN = 16;
  /** RegularExpression Id. */
  int OPERATOR_GREATER_EQUAL_THAN = 17;
  /** RegularExpression Id. */
  int OPERATOR_ASSIGNMENT = 18;
  /** RegularExpression Id. */
  int OPERATOR_EQUAL = 19;
  /** RegularExpression Id. */
  int OPERATOR_NOT_EQUAL = 20;
  /** RegularExpression Id. */
  int LOGICAL_OR = 21;
  /** RegularExpression Id. */
  int LOGICAL_AND = 22;
  /** RegularExpression Id. */
  int LOGICAL_NOT = 23;
  /** RegularExpression Id. */
  int INTEGER_NUM = 24;
  /** RegularExpression Id. */
  int REAL_NUM = 25;
  /** RegularExpression Id. */
  int REAL_TYPE = 26;
  /** RegularExpression Id. */
  int INT_TYPE = 27;
  /** RegularExpression Id. */
  int BOOL_TYPE = 28;
  /** RegularExpression Id. */
  int BOOLEAN = 29;
  /** RegularExpression Id. */
  int EOI = 30;
  /** RegularExpression Id. */
  int EOD = 31;
  /** RegularExpression Id. */
  int OPEN_PARENTHESIS = 32;
  /** RegularExpression Id. */
  int CLOSE_PARENTHESIS = 33;
  /** RegularExpression Id. */
  int VAR_NAME = 34;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<sign>",
    "<digit>",
    "<posDigit>",
    "<chr>",
    "<intOr0>",
    "<fl0at>",
    "<exp>",
    "<token of kind 8>",
    "<token of kind 9>",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"or\"",
    "\"and\"",
    "\"not\"",
    "<INTEGER_NUM>",
    "<REAL_NUM>",
    "\"real\"",
    "\"int\"",
    "\"bool\"",
    "<BOOLEAN>",
    "\";\"",
    "\"&&\"",
    "\"(\"",
    "\")\"",
    "<VAR_NAME>",
  };

}
